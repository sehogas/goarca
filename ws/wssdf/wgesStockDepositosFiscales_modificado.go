// Code generated by gowsdl DO NOT EDIT.

package wssdf

import (
	"context"
	"encoding/xml"
	"time"

	"github.com/hooklift/gowsdl/soap"
)

// against "unused imports"
var _ time.Time
var _ xml.Name

type AnyType struct {
	InnerXML string `xml:",innerxml"`
}

type AnyURI string

type NCName string

type TipoCondicionMercaderia string

const (
	TipoCondicionMercaderiaBuena TipoCondicionMercaderia = "Buena"

	TipoCondicionMercaderiaMala TipoCondicionMercaderia = "Mala"
)

type TipoContenedor string

const (
	TipoContenedorHouse TipoContenedor = "House"

	TipoContenedorPier TipoContenedor = "Pier"

	TipoContenedorCorreo TipoContenedor = "Correo"
)

type RegistrarStock struct {
	XMLName xml.Name `xml:"Ar.Gob.Afip.Dga.wgesStockDepositosFiscales RegistrarStock"`

	ArgWSAutenticacion *WSAutenticacionEmpresa `xml:"argWSAutenticacion,omitempty" json:"argWSAutenticacion,omitempty"`

	Stock *RegistrarStockParams `xml:"stock,omitempty" json:"stock,omitempty"`
}

type RegistrarStockResponse struct {
	XMLName xml.Name `xml:"Ar.Gob.Afip.Dga.wgesStockDepositosFiscales RegistrarStockResponse"`

	RegistrarStockResult *RegistrarStockRta `xml:"RegistrarStockResult,omitempty" json:"RegistrarStockResult,omitempty"`
}

type Dummy struct {
	XMLName xml.Name `xml:"Ar.Gob.Afip.Dga.wgesStockDepositosFiscales Dummy"`
}

type DummyResponse struct {
	XMLName xml.Name `xml:"Ar.Gob.Afip.Dga.wgesStockDepositosFiscales DummyResponse"`

	DummyResult *ResultadoEjecucionDummy `xml:"DummyResult,omitempty" json:"DummyResult,omitempty"`
}

type WSAutenticacionEmpresa struct {
	*WSAutenticacion

	CuitEmpresaConectada int64 `xml:"CuitEmpresaConectada,omitempty" json:"CuitEmpresaConectada,omitempty"`

	TipoAgente string `xml:"TipoAgente,omitempty" json:"TipoAgente,omitempty"`

	Rol string `xml:"Rol,omitempty" json:"Rol,omitempty"`
}

type WSAutenticacion struct {
	Token string `xml:"Token,omitempty" json:"Token,omitempty"`

	Sign string `xml:"Sign,omitempty" json:"Sign,omitempty"`
}

type RegistrarStockParams struct {
	IdTransaccion string `xml:"IdTransaccion,omitempty" json:"IdTransaccion,omitempty"`

	CodigoAduana string `xml:"CodigoAduana,omitempty" json:"CodigoAduana,omitempty"`

	CodigoLugarOperativo string `xml:"CodigoLugarOperativo,omitempty" json:"CodigoLugarOperativo,omitempty"`

	FechaStock string `xml:"FechaStock,omitempty" json:"FechaStock,omitempty"`

	StockExportacion *ArrayOfPermisoEmbarqueType `xml:"StockExportacion,omitempty" json:"StockExportacion,omitempty"`

	StockImportacion *ArrayOfDocumentoTransporteType `xml:"StockImportacion,omitempty" json:"StockImportacion,omitempty"`

	ContenedoresVacios *ArrayOfContenedorVacioType `xml:"ContenedoresVacios,omitempty" json:"ContenedoresVacios,omitempty"`
}

type ArrayOfPermisoEmbarqueType struct {
	PermisoEmbarqueType []*PermisoEmbarqueType `xml:"PermisoEmbarqueType,omitempty" json:"PermisoEmbarqueType,omitempty"`
}

type PermisoEmbarqueType struct {
	*TituloType

	IdentificadorPermiso string `xml:"IdentificadorPermiso,omitempty" json:"IdentificadorPermiso,omitempty"`

	IdentificadorRemito string `xml:"IdentificadorRemito,omitempty" json:"IdentificadorRemito,omitempty"`

	Exportador int64 `xml:"Exportador,omitempty" json:"Exportador,omitempty"`

	DestinoMercaderia string `xml:"DestinoMercaderia,omitempty" json:"DestinoMercaderia,omitempty"`

	DestinatarioExterior string `xml:"DestinatarioExterior,omitempty" json:"DestinatarioExterior,omitempty"`
}

type TituloType struct {
	FechaIngresoDeposito string `xml:"FechaIngresoDeposito,omitempty" json:"FechaIngresoDeposito,omitempty"`

	CondicionMercaderia *TipoCondicionMercaderia `xml:"CondicionMercaderia,omitempty" json:"CondicionMercaderia,omitempty"`

	UbicacionPartida string `xml:"UbicacionPartida,omitempty" json:"UbicacionPartida,omitempty"`

	CondicionImo bool `xml:"CondicionImo,omitempty" json:"CondicionImo,omitempty"`

	NumeroImo string `xml:"NumeroImo,omitempty" json:"NumeroImo,omitempty"`

	ImpedimentoLegalAduanero bool `xml:"ImpedimentoLegalAduanero,omitempty" json:"ImpedimentoLegalAduanero,omitempty"`

	TipoImpedimentoLegalAduanero string `xml:"TipoImpedimentoLegalAduanero,omitempty" json:"TipoImpedimentoLegalAduanero,omitempty"`

	DescripcionImpedimentoLegalAduanero string `xml:"DescripcionImpedimentoLegalAduanero,omitempty" json:"DescripcionImpedimentoLegalAduanero,omitempty"`

	Observaciones string `xml:"Observaciones,omitempty" json:"Observaciones,omitempty"`

	LineasMercaderia *ArrayOfLineaMercaderiaType `xml:"LineasMercaderia,omitempty" json:"LineasMercaderia,omitempty"`

	Contenedores *ArrayOfContenedorAsociadoType `xml:"Contenedores,omitempty" json:"Contenedores,omitempty"`
}

type ArrayOfLineaMercaderiaType struct {
	LineaMercaderiaType []*LineaMercaderiaType `xml:"LineaMercaderiaType,omitempty" json:"LineaMercaderiaType,omitempty"`
}

type LineaMercaderiaType struct {
	TipoEmbalaje string `xml:"TipoEmbalaje,omitempty" json:"TipoEmbalaje,omitempty"`

	Cantidad uint64 `xml:"Cantidad,omitempty" json:"Cantidad,omitempty"`

	PesoBruto float64 `xml:"PesoBruto,omitempty" json:"PesoBruto,omitempty"`
}

type ArrayOfContenedorAsociadoType struct {
	ContenedorAsociadoType []*ContenedorAsociadoType `xml:"ContenedorAsociadoType,omitempty" json:"ContenedorAsociadoType,omitempty"`
}

type ContenedorAsociadoType struct {
	*ContenedorType

	Tipo *TipoContenedor `xml:"Tipo,omitempty" json:"Tipo,omitempty"`

	CantidadBultos int64 `xml:"CantidadBultos,omitempty" json:"CantidadBultos,omitempty"`
}

type ContenedorType struct {
	NumeroContenedor string `xml:"NumeroContenedor,omitempty" json:"NumeroContenedor,omitempty"`

	LongitudContenedor string `xml:"LongitudContenedor,omitempty" json:"LongitudContenedor,omitempty"`
}

type ContenedorVacioType struct {
	*ContenedorType

	FechaIngresoDeposito string `xml:"FechaIngresoDeposito,omitempty" json:"FechaIngresoDeposito,omitempty"`
}

type DocumentoTransporteType struct {
	*TituloType

	IdentificadorManifiesto string `xml:"IdentificadorManifiesto,omitempty" json:"IdentificadorManifiesto,omitempty"`

	IdentificadorDocumentoTransporte string `xml:"IdentificadorDocumentoTransporte,omitempty" json:"IdentificadorDocumentoTransporte,omitempty"`

	Consignatario int64 `xml:"Consignatario,omitempty" json:"Consignatario,omitempty"`

	ProcedenciaMercaderia string `xml:"ProcedenciaMercaderia,omitempty" json:"ProcedenciaMercaderia,omitempty"`
}

type ArrayOfDocumentoTransporteType struct {
	DocumentoTransporteType []*DocumentoTransporteType `xml:"DocumentoTransporteType,omitempty" json:"DocumentoTransporteType,omitempty"`
}

type ArrayOfContenedorVacioType struct {
	ContenedorVacioType []*ContenedorVacioType `xml:"ContenedorVacioType,omitempty" json:"ContenedorVacioType,omitempty"`
}

type RegistrarStockRta struct {
	*ResultadoEjecucionSerializable

	MensajeAceptado bool `xml:"MensajeAceptado,omitempty" json:"MensajeAceptado,omitempty"`
}

type ResultadoEjecucionSerializable struct {
	ListaErrores *ArrayOfMensaje `xml:"ListaErrores,omitempty" json:"ListaErrores,omitempty"`

	Server string `xml:"Server,omitempty" json:"Server,omitempty"`

	TimeStamp string `xml:"TimeStamp,omitempty" json:"TimeStamp,omitempty"`
}

type ArrayOfMensaje struct {
	DetalleError []*Mensaje `xml:"DetalleError,omitempty" json:"DetalleError,omitempty"`
}

type Mensaje struct {
	*AbstractEntidadOfInt32

	Codigo *int32 `xml:"Codigo,omitempty" json:"Codigo,omitempty"`

	Descripcion string `xml:"Descripcion,omitempty" json:"Descripcion,omitempty"`

	DescripcionDetallada string `xml:"DescripcionDetallada,omitempty" json:"DescripcionDetallada,omitempty"`

	TextoAclaratorio string `xml:"TextoAclaratorio,omitempty" json:"TextoAclaratorio,omitempty"`

	DescripcionAdicional string `xml:"DescripcionAdicional,omitempty" json:"DescripcionAdicional,omitempty"`

	Parametros *ArrayOfString `xml:"Parametros,omitempty" json:"Parametros,omitempty"`
}

type AbstractEntidadOfInt32 struct {
	*AbstractEntidadGenerica
}

type AbstractEntidadGenerica struct {
}

type ArrayOfString struct {
	Astring []*string `xml:"string,omitempty" json:"string,omitempty"`
}

type ResultadoEjecucionDummy struct {
	AppServer string `xml:"AppServer,omitempty" json:"AppServer,omitempty"`

	DbServer string `xml:"DbServer,omitempty" json:"DbServer,omitempty"`

	AuthServer string `xml:"AuthServer,omitempty" json:"AuthServer,omitempty"`
}

type WgesStockDepositosFiscalesSoap interface {

	/* Registro de Stock */
	RegistrarStock(request *RegistrarStock) (*RegistrarStockResponse, error)

	RegistrarStockContext(ctx context.Context, request *RegistrarStock) (*RegistrarStockResponse, error)

	Dummy(request *Dummy) (*DummyResponse, error)

	DummyContext(ctx context.Context, request *Dummy) (*DummyResponse, error)
}

type wgesStockDepositosFiscalesSoap struct {
	client *soap.Client
}

func NewWgesStockDepositosFiscalesSoap(client *soap.Client) WgesStockDepositosFiscalesSoap {
	return &wgesStockDepositosFiscalesSoap{
		client: client,
	}
}

func (service *wgesStockDepositosFiscalesSoap) RegistrarStockContext(ctx context.Context, request *RegistrarStock) (*RegistrarStockResponse, error) {
	response := new(RegistrarStockResponse)
	err := service.client.CallContext(ctx, "Ar.Gob.Afip.Dga.wgesStockDepositosFiscales/RegistrarStock", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *wgesStockDepositosFiscalesSoap) RegistrarStock(request *RegistrarStock) (*RegistrarStockResponse, error) {
	return service.RegistrarStockContext(
		context.Background(),
		request,
	)
}

func (service *wgesStockDepositosFiscalesSoap) DummyContext(ctx context.Context, request *Dummy) (*DummyResponse, error) {
	response := new(DummyResponse)
	err := service.client.CallContext(ctx, "Ar.Gob.Afip.Dga.wgesStockDepositosFiscales/Dummy", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *wgesStockDepositosFiscalesSoap) Dummy(request *Dummy) (*DummyResponse, error) {
	return service.DummyContext(
		context.Background(),
		request,
	)
}
